# - *- coding: utf- 8 - *-

import logging
import re
import datetime
from telegram import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, ConversationHandler
from datetime import datetime, timedelta, timezone
from dateutil import tz
import time
import pytz
from timezonefinder import TimezoneFinder

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)


def start(update, context):
    btn = [[KeyboardButton('help'), KeyboardButton('todo list')]]
    name = update.message.from_user['first_name']
    msg = f'–ü—Ä–∏–≤–µ—Ç, {name}! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –Ω–µ –∑–∞–±—ã—Ç—å –æ —Ç–≤–æ–∏—Ö –ø–ª–∞–Ω–∞—Ö. ‚è∞ \n\n' \
          '–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.\n' \
          '–ò–ª–∏ —É–∫–∞–∂–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–µ—Ç–∞ –î–î.–ú–ú.–ì–ì. –ò–ª–∏ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ "–∑–∞–≤—Ç—Ä–∞" —Ç–∞–∫ –∂–µ —É–∫–∞–∑–∞–≤ –≤—Ä–µ–º—è –∏–ª–∏ ' \
          '–Ω–∞–ø–∏—à–∏ –≤ –∫–∞–∫–æ–π –±–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏. \n' \
          '–Ø –ø—Ä–∏—à–ª—é —Ç–µ–±–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.üîñ\n' \
          '–ù–∞–ø–∏—Å–∞–≤ todo list –º–æ–∂–Ω–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏. üìù\n' \
          '–ù–∞–ø–∏—à–∏ help –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–Ω–æ–≤–∞.\n\n' \
          '–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—Ç—Å—è –ø–∏—Å–∞—Ç—å, –º–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'
    markup = ReplyKeyboardMarkup(btn, one_time_keyboard=False, resize_keyboard=True)
    update.message.reply_text(msg, reply_markup=markup)
    print(update.message.date)


def todo_list_view(update, context):

    todo_list_msg = ''
    number = 1

    test = {'first': 'first', 'second': 'second', 'third': 'third'}

    for i in test:
        if i != 'local_tz':
            todo_list_msg += f'{number}. {i.capitalize()}\n'
            number += 1

    if test:
        # keyboard = [[InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data='0')]]
        # reply_markup = InlineKeyboardMarkup(keyboard)
        #
        # update.message.reply_text(text=f'{todo_list_msg}\n'
        #                                    'üóë –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É –Ω–∞–ø–∏—à–∏ /unset <–Ω–æ–º–µ—Ä –≤ —Å–ø–∏—Å–∫–µ>',
        #                               reply_markup=reply_markup)
        btn = [[KeyboardButton('üóë –£–¥–∞–ª–∏—Ç—å')]]
        markup = ReplyKeyboardMarkup(btn, one_time_keyboard=True, resize_keyboard=True)
        update.message.reply_text('üóë –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É –Ω–∞–ø–∏—à–∏ /unset <–Ω–æ–º–µ—Ä –≤ —Å–ø–∏—Å–∫–µ>', reply_markup=markup)


# def test(update, context):
#     query = update.callback_query
#     query.answer()
#     print(query.data)
#     query.edit_message_text(text="–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞—á –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å")


def test(update, context):
    update.message.reply_text("–í—ã–∑–≤–∞–ª–æ—Å—å")



def error(update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)


def main():
    updater = Updater('1155995478:AAHhthsw8Jm2odjX55UvJ6Y95_GX7S3iOks', use_context=True)

    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text("todo list"), todo_list_view, pass_chat_data=True))
    # dp.add_handler(CallbackQueryHandler(test))
    dp.add_handler(MessageHandler(Filters.text('üóë –£–¥–∞–ª–∏—Ç—å'), test, pass_chat_data=True))


    dp.add_error_handler(error)

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()